{"version":3,"sources":["Components/Card.js","Components/Cardlist.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oOAiBeA,EAfF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAU,gDAAf,UACG,qBAAKC,IAAK,SAASC,IAAG,+BAA0BH,EAA1B,cACtB,gCACG,6BAAKF,IACL,4BAAIC,WCcGK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACK,8BAEDA,EAAOC,KAAI,SAACC,EAAMC,GACpB,OACA,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKMC,EAbG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aACjC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACCA,UAAU,oCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCECI,G,MARA,SAACC,GACf,OACQ,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACCJ,EAAMK,aCqCDC,E,kDAnCd,aAAe,IAAD,8BACZ,gBAaHC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAbvC,EAAKC,MAAQ,CACdvB,OAAQ,GACLK,YAAa,IAJH,E,qDAQf,WAAqB,IAAD,OACnBmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKR,SAAS,CAAEpB,OAAQ4B,S,oBAOxC,WACC,MAAgCC,KAAKN,MAA7BvB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACVyB,EAAiB9B,EAAO+B,QAAO,SAAAC,GAClC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAEtD,OACA,sBAAKrC,UAAU,KAAf,UACD,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAQ8B,a,GA7BHK,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.5384f9c0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn(\r\n\t\t<div className='tc bg-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t   <img alt= 'robots' src={`https://robohash.org/${id}?100x100`} />\r\n\t\t   <div>\r\n\t\t      <h2>{name}</h2>\r\n\t\t      <p>{email}</p>\r\n\r\n\t\t   </div>\r\n\r\n\t\t</div>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist = ({ robots }) => {\r\n\treturn(\r\n      <div>\r\n      {\r\n\t    robots.map((user, i) => {\r\n\t\t return ( \r\n\t\t <Card \r\n\t\t  key={i}\r\n\t\t  id={robots[i].id}\r\n\t\t  name={robots[i].name}\r\n\t\t  email={robots[i].email}\r\n\t\t  />\r\n\t\t); \r\n\t    })\r\n      }\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchField, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t <input\r\n\t\t  className='pa3 ba b- -green bg-lightest-blue'\r\n\t\t  type='search'\r\n\t\t  placeholder='search robots'\r\n\t\t  onChange={searchChange}\r\n\t     />\r\n        </div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n         <div style={{overflow: 'scroll', border: '2px solid black', height: '800px'}}>\r\n         {props.children}\r\n         </div>  \r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport Cardlist from '../Components/Cardlist.js';\r\nimport SearchBox from '../Components/SearchBox.js'\r\nimport './App.css';\r\nimport Scroll from '../Components/Scroll.js';\r\n\r\n\r\nclass App extends Component  {\r\n\tconstructor() {\r\n\t  super()\r\n\t  this.state = {\r\n\t\trobots: [],\r\n\t    searchField: ''\r\n\t}\r\n}\r\n\r\ncomponentDidMount() {\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t.then(response=> response.json())\r\n\t.then(users => {this.setState({ robots: users})});\r\n}\r\n\r\nonSearchChange = (event) => {\r\n\tthis.setState({searchField: event.target.value})\r\n\t}\r\n\r\n render() {\r\n \tconst { robots, searchField } = this.state;\r\n \tconst filteredRobots = robots.filter(robot => {\r\n     return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    })\r\n    return (\r\n\t   <div className='tc'>\r\n\t\t <h1 className='f1'>RoboFriends</h1>\r\n\t\t <SearchBox searchChange={this.onSearchChange}/>\r\n\t\t <Scroll>\r\n\t\t <Cardlist robots={filteredRobots} />\r\n\t\t </Scroll>\r\n\t   </div>\r\n\t    );\r\n   }\t\r\n} \r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}